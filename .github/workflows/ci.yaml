name: Code Quality Check

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    name: Tests
    runs-on: ubuntu-22.04
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.9", "3.10"]

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Cache python environment
        id: cache-env
        uses: actions/cache@v2
        with:
          path: ${{ env.pythonLocation }}
          key: ${{ runner.os }}-testing-${{ matrix.python-version }}-${{ hashFiles('poetry.lock') }}
      - name: Install poetry
        if: steps.cache-env.outputs.cache-hit != 'true'
        run: |
          pip install poetry==1.3
      - name: Setup poetry environment
        id: setup-poetry-env
        run: |
          poetry env use $(which python)
          echo "::set-output name=poetry-env::$(poetry env info --path)"
      - name: Install dependencies
        if: steps.cache-poetry.outputs.cache-hit != 'true'
        run: |
          poetry install
      - name: Test with pytest
        run: |
          poetry run pytest